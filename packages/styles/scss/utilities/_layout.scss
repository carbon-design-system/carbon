//
// Copyright IBM Corp. 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use 'sass:map';

@use '../config';
@use '../spacing' as *;
@use './custom-property';
@use './convert' as *;

$tokens: (
  size: (
    height: (
      xs: rem(24px),
      sm: rem(32px),
      md: rem(40px),
      lg: rem(48px),
      xl: rem(64px),
      2xl: rem(80px),
    ),
  ),
  density: (
    padding-inline: (
      condensed: $spacing-03,
      normal: $spacing-05,
    ),
  ),
);

@mixin use($group, $default, $min: null, $max: null) {
  $properties: map.get($tokens, $group);

  @each $property, $steps in $properties {
    @if $min {
      @include custom-property.declaration(
        'layout-#{$group}-#{$property}-min',
        max(
          custom-property.get-var('layout-#{$group}-#{$property}-min-context'),
          custom-property.get-var('layout-#{$group}-#{$property}-#{$min}')
        )
      );
    }

    @if $max {
      @include custom-property.declaration(
        'layout-#{$group}-#{$property}-max',
        min(
          custom-property.get-var('layout-#{$group}-#{$property}-max-context'),
          custom-property.get-var('layout-#{$group}-#{$property}-#{$max}')
        )
      );
    }

    $value: clamp(
      custom-property.get-var('layout-#{$group}-#{$property}-min'),
      custom-property.get-var(
        'layout-#{$group}-#{$property}-context',
        custom-property.get-var('layout-#{$group}-#{$property}-#{$default}')
      ),
      custom-property.get-var('layout-#{$group}-#{$property}-max')
    );

    @include custom-property.declaration(
      'layout-#{$group}-#{$property}',
      $value
    );

    > * {
      @if $min {
        @include custom-property.declaration(
          'layout-#{$group}-#{$property}-min-context',
          custom-property.get-var('layout-#{$group}-#{$property}-min')
        );
      }

      @if $max {
        @include custom-property.declaration(
          'layout-#{$group}-#{$property}-max-context',
          custom-property.get-var('layout-#{$group}-#{$property}-max')
        );
      }

      @include custom-property.declaration(
        'layout-#{$group}-#{$property}-context',
        custom-property.get-var('layout-#{$group}-#{$property}')
      );
    }
  }
}

@function -group($group, $property) {
  @return custom-property.get-var('layout-#{$group}-#{$property}');
}

@function size($property) {
  @return -group('size', $property);
}

@function density($property) {
  @return -group('density', $property);
}
