//
// Copyright IBM Corp. 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use 'sass:map';

@use '../config';
@use '../spacing' as *;
@use './custom-property';
@use './convert' as *;

$tokens: (
  size: (
    height: (
      xs: rem(24px),
      sm: rem(32px),
      md: rem(40px),
      lg: rem(48px),
      xl: rem(64px),
      2xl: rem(80px),
    ),
  ),
  density: (
    padding-inline: (
      condensed: $spacing-03,
      normal: $spacing-05,
    ),
  ),
);

@mixin use($group, $default, $min: null, $max: null) {
  $properties: map.get($tokens, $group);

  @each $property, $steps in $properties {
    $minValue: custom-property.get-var('layout-#{$group}-#{$property}-min');
    @if $min {
      $minValue: max(
        $minValue,
        custom-property.get-var('layout-#{$group}-#{$property}-#{$min}')
      );
    }

    $maxValue: custom-property.get-var('layout-#{$group}-#{$property}-max');
    @if $max {
      $maxValue: min(
        $maxValue,
        custom-property.get-var('layout-#{$group}-#{$property}-#{$max}')
      );
    }

    $value: clamp(
      $minValue,
      custom-property.get-var(
        'layout-#{$group}-#{$property}',
        custom-property.get-var('layout-#{$group}-#{$property}-#{$default}')
      ),
      $maxValue
    );

    @include custom-property.declaration(
      'layout-#{$group}-#{$property}-local',
      $value
    );
  }
}

@function -group($group, $property) {
  @return custom-property.get-var('layout-#{$group}-#{$property}-local');
}

@function size($property) {
  @return -group('size', $property);
}

@function density($property) {
  @return -group('density', $property);
}
