/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { classMap } from 'lit/directives/class-map.js';
import { LitElement, html } from 'lit';
import { property } from 'lit/decorators.js';
import { prefix } from '../../globals/settings';
import { LOADING_TYPE } from './defs';
import getLoadingIcon from './loading-icon';
import styles from './loading.scss?lit';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

/**
 * Spinner indicating loading state.
 *
 * @element cds-loading
 */
@customElement(`${prefix}-loading`)
class CDSLoading extends LitElement {
  /**
   * The assistive text for the spinner icon.
   */
  @property({ attribute: 'assistive-text' })
  assistiveText = 'Loading';

  /**
   * Spinner type.
   */
  @property()
  type = LOADING_TYPE.REGULAR;

  /**
   * `true` if overlay should be applied.
   */
  @property({ type: Boolean, reflect: true })
  overlay = false;

  /**
   * `true` if spinner should stop.
   */
  @property({ type: Boolean, reflect: true })
  inactive = false;

  render() {
    const { inactive, assistiveText, type, overlay } = this;
    const innerClasses = classMap({
      [`${prefix}--loading`]: true,
      [`${prefix}--loading--stop`]: inactive,
      [`${prefix}--loading--small`]: type === LOADING_TYPE.SMALL,
    });
    const icon = getLoadingIcon({ assistiveText, type });
    return overlay ? html`<div class="${innerClasses}">${icon}</div>` : icon;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom Vite loader
}

export { LOADING_TYPE };

export default CDSLoading;
