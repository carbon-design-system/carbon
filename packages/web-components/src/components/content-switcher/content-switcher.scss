//
// Copyright IBM Corp. 2019, 2025
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

$css--plex: true !default;

@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/utilities/convert' as *;
@use '@carbon/styles/scss/components/content-switcher/content-switcher' as *;
@use '@carbon/styles/scss/layout' as *;
@use '@carbon/styles/scss/components/button/index' as *;

// https://github.com/carbon-design-system/carbon/issues/11408
@include content-switcher;

:host(#{$prefix}-content-switcher) {
  @extend .#{$prefix}--content-switcher;
  @include emit-layout-tokens();
}

:host(#{$prefix}-content-switcher[icon]) {
  @extend .#{$prefix}--content-switcher--icon-only;
}

:host(#{$prefix}-content-switcher[size='sm']) {
  @extend .#{$prefix}--layout--size-sm;
}

:host(#{$prefix}-content-switcher[size='lg']) {
  @extend .#{$prefix}--layout--size-lg;
}

:host(#{$prefix}-content-switcher[disabled]) {
  outline-color: $border-disabled;
}

:host(#{$prefix}-content-switcher-item) {
  inline-size: 100%;
  outline: none;

  .#{$prefix}--content-switcher-btn {
    align-items: center;
    padding: $spacing-03 var(--cds-layout-density-padding-inline-local);
    block-size: 100%;
    color: $text-secondary;
    inline-size: 100%;

    &:first-child,
    &:last-child {
      border-radius: 0;
      border-inline-end: none;
      border-inline-start: none;
    }

    &::before {
      position: absolute;
      z-index: 2;
      display: block;
      background-color: $border-subtle;
      block-size: $spacing-05;
      content: '';
      inline-size: rem(1px);
      inset-inline-start: 0;
    }

    &:hover {
      color: $text-primary;
    }

    &.#{$prefix}--content-switcher--selected {
      border: 0;
      color: $text-inverse;
    }

    &.#{$prefix}--content-switcher--selected,
    &:focus,
    &:hover {
      &::before {
        background-color: transparent;
      }
    }

    &:disabled {
      &.#{$prefix}--content-switcher--selected {
        border-radius: rem(4px);
        background-color: $button-disabled;

        ::slotted(p) {
          color: $text-disabled;
        }
      }

      border-color: $border-disabled !important; /* stylelint-disable-line declaration-no-important */
      background-color: transparent;

      ::slotted(p) {
        color: $text-disabled !important; /* stylelint-disable-line declaration-no-important */
      }

      border-block-end-color: $border-inverse;
      border-block-start-color: $border-inverse;
    }
  }
}

:host(#{$prefix}-content-switcher-item:first-of-type)
  .#{$prefix}--content-switcher-btn {
  border-end-start-radius: $spacing-02;
  border-start-start-radius: $spacing-02;
  box-shadow: inset rem(1px) 0 0 0 $border-inverse;

  &:disabled {
    box-shadow: none;
  }
}

:host(#{$prefix}-content-switcher-item:last-of-type)
  .#{$prefix}--content-switcher-btn {
  border-end-end-radius: $spacing-02;
  border-start-end-radius: $spacing-02;
  box-shadow: inset rem(-1px) 0 0 0 $border-inverse;

  &:disabled {
    box-shadow: none;
  }
}

:host(#{$prefix}-content-switcher-item:first-of-type)
  .#{$prefix}--content-switcher-btn::before {
  background-color: transparent;
}

:host(#{$prefix}-content-switcher-item[hide-divider])
  .#{$prefix}--content-switcher-btn::before {
  background-color: transparent;
}

:host(#{$prefix}-content-switcher-item:not([hide-divider]))
  .#{$prefix}--content-switcher-btn:not(
    .#{$prefix}--content-switcher--selected
  ) {
  &:disabled {
    &:hover {
      &::before {
        background-color: $border-subtle;
      }
    }
  }
}

:host(#{$prefix}-content-switcher-item[icon]) {
  inline-size: initial;

  .#{$prefix}--content-switcher__label {
    display: flex;
    align-items: center;
  }
}

:host(#{$prefix}-content-switcher-item[icon][size='sm'])
  .#{$prefix}--content-switcher-btn {
  block-size: var(--cds-layout-size-height-local);
  padding-inline: rem(8px);
}

:host(#{$prefix}-content-switcher-item[icon][size='md'])
  .#{$prefix}--content-switcher-btn {
  block-size: $spacing-08;
  padding-inline: rem(12px);
}

:host(#{$prefix}-content-switcher-item[icon][size='lg'])
  .#{$prefix}--content-switcher-btn {
  block-size: $spacing-09;
  padding-inline: rem(14px);
}

:host(#{$prefix}-content-switcher-item[icon]:not([low-contrast]))
  ::slotted(svg) {
  fill: $icon-primary;
}

:host(#{$prefix}-content-switcher-item[icon]:not([low-contrast])[selected])
  ::slotted(svg) {
  fill: $icon-inverse;
}

:host(#{$prefix}-content-switcher-item[icon]:not([low-contrast])[disabled])
  ::slotted(svg) {
  fill: $icon-disabled;
}

:host([low-contrast]) {
  @extend .#{$prefix}--content-switcher--low-contrast;

  border-radius: rem(4px);

  &:host(#{$prefix}-content-switcher-item)
    .#{$prefix}--content-switcher-btn:not([disabled]) {
    box-shadow: none;
  }

  // First item (only in low contrast)
  &:host(#{$prefix}-content-switcher-item:first-of-type)
    .#{$prefix}--content-switcher-btn:not([disabled]) {
    border-end-start-radius: rem(4px);
    border-start-start-radius: rem(4px);
    box-shadow: inset rem(1px) 0 0 0 $border-strong;
  }

  // Last item (only in low contrast)
  &:host(#{$prefix}-content-switcher-item:last-of-type)
    .#{$prefix}--content-switcher-btn:not([disabled]) {
    border-end-end-radius: rem(4px);
    border-start-end-radius: rem(4px);
    box-shadow: inset rem(-1px) 0 0 0 $border-strong;
  }
}
