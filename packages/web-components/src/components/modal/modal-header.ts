/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { prefix } from '../../globals/settings';
import styles from './modal.scss?lit';
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

/**
 * Modal header.
 *
 * @element cds-modal-header
 */
@customElement(`${prefix}-modal-header`)
class CDSModalHeader extends LitElement {
  /**
   * `true` if there is a slug.
   */
  protected _hasSlug = false;

  /**
   * Handles `slotchange` event.
   */
  protected _handleSlotChange({ target }: Event) {
    const hasContent = (target as HTMLSlotElement)
      .assignedNodes()
      .filter((elem) =>
        (elem as HTMLElement).matches !== undefined
          ? (elem as HTMLElement).matches(
              (this.constructor as typeof CDSModalHeader).slugItem
            )
          : false
      );
    if (hasContent.length > 0) {
      this._hasSlug = Boolean(hasContent);
      (hasContent[0] as HTMLElement).setAttribute('size', 'lg');
    }
    this.requestUpdate();
  }

  updated() {
    if (this._hasSlug) {
      this.parentElement?.setAttribute('slug', '');
    } else {
      this.parentElement?.removeAttribute('slug');
    }
  }

  render() {
    return html` <slot></slot>
      <slot name="slug" @slotchange="${this._handleSlotChange}"></slot>`;
  }

  /**
   * A selector that will return the slug item.
   */
  static get slugItem() {
    return `${prefix}-slug`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSModalHeader;
