name: Version
run-name: ${{ inputs.type }} - ${{ inputs.tag }} by @${{ github.actor }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      type:
        required: true
        description: 'Specify the type of release'
        type: choice
        default: preminor
        options:
          - minor
          - preminor
          - prerelease
      tag:
        required: true
        description: 'Specify the tag for this release'
        type: string

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.repository == 'carbon-design-system/carbon'
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac #v4.0.0
        with:
          fetch-depth: '0'
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            */**/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Create preminor release
        if: ${{ github.event.inputs.type == 'preminor' }}
        run: |
          yarn lerna version preminor --no-git-tag-version --preid rc --yes
      - name: Create prerelease
        if: ${{ github.event.inputs.type == 'prerelease' }}
        run: |
          yarn lerna version prerelease --no-git-tag-version --preid rc --yes
      - name: Create minor release
        if: ${{ github.event.inputs.type == 'minor' }}
        run: |
          yarn lerna version minor --no-git-tag-version --no-push --yes
      - name: Generate token
        uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: 'release/${{ github.event.inputs.tag }}'
          commit-message: 'chore(release): ${{ github.event.inputs.tag }}'
          delete-branch: true
          title: 'chore(release): ${{ github.event.inputs.tag }}'
          token: ${{ steps.generate_token.outputs.token }}
          body: |
            Automated release PR for ${{ github.event.inputs.tag }}

            **Checklist**

            - [ ] Verify package version bumps are accurate
            - [ ] Verify CI passes as expected
