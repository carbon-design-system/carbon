name: Version patch
run-name: patch - ${{ inputs.tag }} by @${{ github.actor }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'Specify the new release tag (e.g. v11.80.2)'
        type: string

      release-branch:
        required: true
        description:
          'Name of the release branch you created and pushed (e.g.
          release/v11.80.2)'
        type: string

jobs:
  version:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ inputs.release-branch }}
      - name: Check if tag already exists
        run: |
          if git rev-parse "refs/tags/${{ inputs.tag }}" >/dev/null 2>&1; then
            echo "Tag '${{ inputs.tag }}' already exists. Choose a new version tag."
            exit 1
          fi
      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node_modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache
        with:
          path: |
            node_modules
            */**/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Update telemetry.yml
        run: yarn run telemetry:config
      - name: Create patch version
        run: yarn lerna version patch --no-git-tag-version --no-push --yes
      - name: Create release commit and push
        run: |
          git add -A
          git commit -m 'chore(release): ${{ inputs.tag }}' --no-verify
          git push
      - name: Tag the release and push
        run: |
          git tag -a ${{ inputs.tag }} -m '${{ inputs.tag }}'
          git push origin refs/tags/${{ inputs.tag }}
      - name: Print next steps
        run: |
          echo "Patch release branch '${{ inputs.release-branch }}' has been tagged as ${{ inputs.tag }}"
          echo "Check the release action at:"
          echo "https://github.com/carbon-design-system/carbon/actions?query=workflow%3ARelease"
