name: Publish Web Components CDN artifacts to Cloud Object Storage

on:
  workflow_dispatch:
  push:
    tags:
      # Matches tags that have the shape `vX.Y.Z` or `vX.Y.Z-rc.X` Reference:
      # https://help.github.com/en/articles/workflow-syntax-for-github-actions#onpushpull_requesttagsbranches
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'
      - '!v10*'

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-cdn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'

      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@7e24a656e1c7a0d6f3eaef8d8e84ae379a5b035b
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: |
          yarn install
          yarn build

      - name: Check release type
        if: contains(github.ref_name, '-rc.')
        run: echo "PRE_RELEASE=true" >> $GITHUB_ENV

      - name: Get version of web components from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/web-components

      - name: Configure IBM Cloud credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          aws-access-key-id: ${{ secrets.COMMON_COS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.COMMON_COS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.COMMON_COS_REGION }}

      - name: Upload CDN artifacts
        run: |
          upload() {
            local DEST=$1
            echo "Uploading to $DEST"
            aws s3 sync packages/web-components/dist \
              s3://${{ secrets.COMMON_COS_BUCKET }}/$DEST \
              --acl public-read \
              --follow-symlinks \
              --endpoint-url https://${{ secrets.COMMON_COS_ENDPOINT }}
          }
        
          if [ "$PRE_RELEASE" = "true" ]; then
            # If tag is a release candidate, upload the CDN artifacts to the `next` tag folder
            # ie. https://1.www.s81c.com/common/carbon/web-components/tag/v2/next/breadcrumb.min.js
            upload "common/carbon/web-components/tag/v2/next"
          else
            # If tag is a full release, upload the CDN artifacts to the `latest` tag folder
            # ie. https://1.www.s81c.com/common/carbon/web-components/tag/v2/latest/breadcrumb.min.js
            upload "common/carbon/web-components/tag/v2/latest"
          fi

          # Upload the CDN artifacts to versioned folder
          # ie. https://1.www.s81c.com/common/carbon/web-components/version/v2.12.0/breadcrumb.min.js
          upload "common/carbon/web-components/version/v${{ steps.package-version.outputs.current-version }}"
