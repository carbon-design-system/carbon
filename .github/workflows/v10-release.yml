name: v10 - Release

on:
  push:
    tags:
      # Push events to matching v10*, i.e. v10.55.0, v10.55.1
      - 'v10*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Needed as recommended by npm docs on publishing with provenance https://docs.npmjs.com/generating-provenance-statements
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Build project
        run: yarn build

      - name: Run Continuous Integration checks
        run: yarn ci-check

      - name: Publish packages under the `community` dist tag
        run:
          yarn lerna publish from-package --dist-tag community
          --no-verify-access --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Prepare artifacts for release
        run: |
          zip -r --junk-paths carbon-elements.sketchplugin.zip packages/sketch/carbon-elements.sketchplugin

      - name: Get latest v10 tag
        id: calculate-tag
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { execSync } = require('child_process');
            const semver = require('semver');

            // Get all tags starting with v10
            const output = execSync("git tag --list 'v10.*.*'", { encoding: 'utf8' });
            const tags = output.trim().split('\n').filter(Boolean);

            if (tags.length === 0) {
              core.setFailed('No v10 tags found.');
              return;
            }

            // Sort with semver
            const sorted = tags.sort((a, b) => semver.rcompare(a, b));
            const latest = sorted[0];

            core.info(`Latest v10 tag: ${latest}`);
            core.setOutput('latestTag', latest);

      - name: Create Release
        id: create_release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
        with:
          script: |
            // Generate the changelog
            const {
              exitCode,
              stdout,
              stderr
            } = await exec.getExecOutput('./packages/cli/bin/carbon-cli.js', ['changelog', '${{ steps.calculate-tag.outputs.latestTag }}..${{ context.ref }}', '--noPrompt'], options);

            // Changelog command outputs the generated changelog to stdout
            core.info(`${stdout}`);

            github.rest.repos.createRelease({
              tag_name: context.ref,
              name: context.ref,
              body: stdout
              draft: false,
              make_latest: false,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 #v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./carbon-elements.sketchplugin.zip
          asset_name: carbon-elements.sketchplugin.zip
          asset_content_type: application/zip
